name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal
      
    - name: Publish
      run: dotnet publish -c Release NETDiscordBot
      
    - name: Login via Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to Azure Docker
      uses: azure/docker-login@v1
      with:
        login-server: rottenbaseregistry.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        
    - name: Build and push docker image
      run: |
        docker build ./NETDiscordBot -t rottenregistry.azurecr.io/discordbotnet:${{ github.sha }}
        docker push rottenregistry.azurecr.io/discordbotnet:${{ github.sha }}
        
    - name: Deploy to Azure Container Instances
      uses: azure/aci-deploy@v1
      with:
        resource-group: RottenBotNET
        dns-name-label: labek123321
        image: rottenregistry.azurecr.io/discordbotnet:${{ github.sha }}
        registry-username: ${{ secrets.REGISTRY_USERNAME }}
        registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        name: rotten-bot-net-instance
        location: 'west europe'
        restart-policy: OnFailure